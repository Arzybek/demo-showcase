version: 2.1

jobs:
  deploy-to-development:
    docker:
      - image: docker:20.10.9
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            ls
            chmod +x ./build.sh;
            sh ./build.sh
            docker build -f Dockerfile-migrations -t migrations-service:latest .
            docker build -f Dockerfile-data -t shows-data-service:latest .
            docker build -f Dockerfile-frontend -t shows-frontend-service:latest .
      - run:
          name: Compress Docker Image
          command: |
            docker save migrations-service:latest | gzip > migrations-service.tar.gz
            docker save shows-data-service:latest | gzip > shows-data-service.tar.gz
            docker save shows-frontend-service:latest | gzip > shows-frontend-service.tar.gz
      - run: ls -lh
      - persist_to_workspace:
          root: .
          paths:
            - shows-frontend-service.tar.gz
            - shows-data-service.tar.gz
            - migrations-service.tar.gz
            - ./docker/
  transfer-and-run:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install SSH And Configure
          command: |
            echo $SSH_PRIVATE_KEY | base64 --decode > ./id_rsa
            chmod 400 id_rsa
      - run:
          name: Stop Remote Docker-Compose
          command: |
            ssh -o "StrictHostKeyChecking=no" -i ./id_rsa $USER@$HOST '
            if [ -f compose.yml ]; then
            sudo docker-compose -f docker/compose.yml down --rmi all
            sudo rm compose.yml
            else
            echo "compose.yml not found"
            fi
            '
      - run:
          name: Transfer Files
          command: |
            scp -o "StrictHostKeyChecking=no" -i ./id_rsa ./shows-frontend-service.tar.gz ./shows-data-service.tar.gz ./migrations-service.tar.gz $USER@$HOST:~/
            scp -o "StrictHostKeyChecking=no" -i ./id_rsa -r ./docker $USER@$HOST:~/
      - run:
          name: Decompress Docker Image | Run Compose
          command: |
            ssh -o "StrictHostKeyChecking=no" -i ./id_rsa $USER@$HOST '
            sudo gunzip -c ./shows-frontend-service.tar.gz | sudo docker load
            sudo gunzip -c ./shows-data-service.tar.gz | sudo docker load
            sudo gunzip -c ./migrations-service.tar.gz | sudo docker load
            sudo rm ./*.tar.gz
            cd docker
            sudo docker compose -f compose.yml up -d                    
            '

workflows:
  deploy-to-dev:
    jobs:
      - deploy-to-development:
          filters:
            branches:
              only:
                - deploy
      - transfer-and-run:
          requires:
            - deploy-to-development
          filters:
            branches:
              only:
                - deploy