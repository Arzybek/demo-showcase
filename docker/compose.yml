version: "3.8"

services:
  postgres:
    image: 'postgres:14-alpine'
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./imports/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - auth

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.0
    container_name: keycloak
    volumes:
      - ./imports:/opt/keycloak/data/import
    command: ['start-dev --import-realm --http-relative-path=/auth']
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: postgres
#      KC_DB_URL: jdbc:postgresql://postgres:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_FRONTEND_URL: http://localhost:8484/auth
    ports:
      - "8484:8080"
    depends_on:
      - postgres
    links:
      - "postgres:postgres"
    networks:
      - auth

  migrations:
    build: ../services/shows-migrations-service
    container_name: migrations
    depends_on:
      - postgres
    networks:
      - auth
    environment:
      POSTGRES_SCHEMA: shows
      POSTGRES_JDBC_URL: jdbc:postgresql://postgres:5432/postgres

  shows-data:
    build: ../services/shows-data-service
    container_name: shows-data
    depends_on:
      - postgres
      - keycloak
      - migrations
    network_mode: host
    environment:
      POSTGRES_JDBC_URL: jdbc:postgresql://localhost:5432/postgres
      KEYCLOAK_URL: http://localhost:8484/auth
      SERVER_PORT: 8080
#    extra_hosts:
#      - "host.docker.internal:host-gateway"

  frontend:
    build: ../services/shows-frontend-service
    container_name: frontend
    depends_on:
      - shows-data
      - keycloak
    network_mode: host
    environment:
      BACKEND_URL: http://localhost:8080
      KEYCLOAK_URL: http://localhost:8484/auth
      SERVER_PORT: 8081
#    extra_hosts:
#      - "host.docker.internal:host-gateway"

networks:
  auth:
    driver: bridge